#===========================================================================
# MmanagerGER (192.168.0.12)
#===========================================================================
# Create SSH Key
#---------------------------------------------------------------------------
# Generate SSH RSA keys (private and public)
ssh-keygen -t rsa
# Leave default value for file (e.g. /home/ubuntu/.ssh/id_rsa)
# Leave empty passphrase for no passphrase

# Add read/write permissions to the private and public keys
chmod 664 ~/.ssh/id_rsa*

# Copy the public key to the VM with OF-Config
scp ~/.ssh/id_rsa.pub ubuntu@192.168.0.14:/home/manager/.ssh/
#---------------------------------------------------------------------------
# Setup SSH Connection for Netopeer CLI
#---------------------------------------------------------------------------
# Open Netopeer CLI
netopeer-cli

# Disable interactive and password authentication types
auth pref password -1
auth pref interactive -1
# Add SSH RSA keys to Netopeer CLI
auth keys add /home/ubuntu/.ssh/id_rsa

# Connect to the OF-Config server
connect --login ubuntu 192.168.56.12
# Check current running configuration
get-config running
#---------------------------------------------------------------------------
# Enable to edit the controller configuration
#---------------------------------------------------------------------------
# 1. Backup the current running configuration
get-config --out running-config.xml running 
# 3. Add the controller for each switch from the backup configuration
edit-config --config running-config.xml running
# 4. Delete the created XML file
rm running-config.xml
#---------------------------------------------------------------------------
# Script
#---------------------------------------------------------------------------
# 1. Init controller configuration to enable editing
#   1.2 Run the bash file as the user with SSH RSA keys (e.g. ubuntu)
#       ./ofconfig-tool_init-controller.sh

# Database=tcp:192.168.0.12:6640 + Server=192.168.0.12 + User=ubuntu + Switches=[s1001...s1111]
#   Option=delete
        ./ofconfig-tool_init-controller.sh -d tcp:192.168.0.12:6640 -s 192.168.0.12 -u ubuntu -c tcp:192.168.56.16:6653 -r 1001:1111 -o delete
#   Option=create
        ./ofconfig-tool_init-controller.sh -d tcp:192.168.0.12:6640 -s 192.168.0.12 -u ubuntu -c tcp:192.168.56.16:6653 -r 1001:1111 -o create

# 2. Modify the controller for a set of switches
#   2.1 Run the bash file as the user with SSH RSA keys (e.g. ubuntu)
#       ./ofconfig-tool_set-controller.sh

# Server=192.168.0.12 + Port=830 + User=ubuntu + Interface=eth0
#   Switches=[s1001] + Output=1.csv
#       Controller=tcp:1192.168.56.17:6633 (opendaylight)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1001 -o 1.csv -c tcp:1192.168.56.17:6633
#       Controller=tcp:192.168.56.16:6653 (ryu)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1001 -o 1.csv -c tcp:192.168.56.16:6653
#   Switches=[s1001...s1010] + Output=10.csv
#       Controller=tcp:1192.168.56.17:6633 (opendaylight)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1010 -o 10.csv -c tcp:1192.168.56.17:6633
#       Controller=tcp:192.168.56.16:6653 (ryu)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1010 -o 10.csv -c tcp:192.168.56.16:6653
#   Switches=[s1001...s1025] + Output=25.csv
#       Controller=tcp:1192.168.56.17:6633 (opendaylight)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1025 -o 25.csv -c tcp:1192.168.56.17:6633
#       Controller=tcp:192.168.56.16:6653 (ryu)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1025 -o 25.csv -c tcp:192.168.56.16:6653
#   Switches=[s1001...s1050] + Output=50.csv
#       Controller=tcp:1192.168.56.17:6633 (opendaylight)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1050 -o 50.csv -c tcp:1192.168.56.17:6633
#       Controller=tcp:192.168.56.16:6653 (ryu)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1050 -o 50.csv -c tcp:192.168.56.16:6653
#   Switches=[s1001...s1075] + Output=75.csv
#       Controller=tcp:1192.168.56.17:6633 (opendaylight)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1075 -o 75.csv -c tcp:1192.168.56.17:6633
#       Controller=tcp:192.168.56.16:6653 (ryu)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1075 -o 75.csv -c tcp:192.168.56.16:6653
#   Switches=[s1001...s1100] + Output=100.csv
#       Controller=tcp:1192.168.56.17:6633 (opendaylight)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1100 -o 100.csv -c tcp:1192.168.56.17:6633
#       Controller=tcp:192.168.56.16:6653 (ryu)
            ./ofconfig-tool_set-controller.sh -s 192.168.0.14 -p 830 -u ubuntu -i eth0 -r 1001:1100 -o 100.csv -c tcp:192.168.56.16:6653

#---------------------------------------------------------------------------
#===========================================================================
# VM2 - OFCONFIG (192.168.0.14)
#===========================================================================
# Authorize SSH Key
#---------------------------------------------------------------------------
# Create the file for authorized keys
touch ~/.ssh/authorized_keys
# Copy the content from the public key to the file for authorized keys
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
# Check the content of the file for authorized keys
more ~/.ssh/authorized_keys

# Run the OF-Config server
sudo ofc-server -v 5 -f
#---------------------------------------------------------------------------
# Enable to edit the controller configuration
#---------------------------------------------------------------------------
# 2. Delete the controller for each switch
sudo ovs-vsctl del-controller sX
#---------------------------------------------------------------------------
# Script
#---------------------------------------------------------------------------
# 1. Init controller configuration to enable editing
#   1.1 Set OVSDB mmanagerger listener to support ./ofconfig-tool_init-controller.sh
sudo ovs-vsctl set-mmanagerger ptcp:6640
#   1.3 After running ./ofconfig-init-controller.sh, delete OVSDB mmanagerger listener
sudo ovs-vsctl del-mmanagerger
#---------------------------------------------------------------------------
#Check netopeer keys
netconf> auth keys 
#Remove keys
netconf> auth keys remove "path" 
#(eg. "/home/mmanager/.ssh/id_rsa")

# Add keys
netconf> auth keys add "path" 
#(eg. "/home/mmanagerger/.ssh/id_rsa")
============================================================================
